---
Configuration:
    number: 23
    myStr: toto

Titre: "BANC DE TEST AGIV "


# ------ Relay values --------
# Corespondance Bits AGIV vs relay              
#       b8      b7      b6      b5      b4      b3      b2      b1      b0
#       nc      nc      Rr-     Rr+     Pwr     Rb-     Ra-     Rb+     Ra+           
# V+ connections:   A=x00,  B=x01,  C=x02,  D=x03
# V- connections:   A=x00,  B=x04,  C=x08,  D=x0C
# V- to Pwr: x10
# R hom +: x20
# R hom -: x40
# 

Options:
    advanced_tab: True   # Enable Adanced tab  panel
    advanced_box: True   # Enable Adanced cbox  panel
    reports_directory: 'z:\Agiv_reports'


Commands:
    aoip_mes: 'MEAS?'
    aoip_out: 'Sour {}'
    aoip_meas_time: 2.0      # Waiting time between source setting and Aoip measure
    giv_mes: 'IN:VAL?'
    giv_out: 'OUT:VAL {};:OUT:VAL?'
    giv_meas_time: 2.0  # Time to stabilize input value on the giv
    aoip_range_sel_time: 2.0    # waiting time between range change and the reply of Aoip 

Ranges:
    "Choisisez la gamme":
        active: False

    "Allume la Led":
        active: False
        calibrate: False 
        relays: [0x80] 
        aoip: ["SENSE2:FUNC CURRENT;CURRENT:RANGE 25MA;SUPPLY OFF",'toto']
        giv4: ":MODE OUTPUT_CURRENT_020MA"
        measure_on: aoip    # The giv is on output mode, the measure is on AOIP
        correction: "GIV4 GAIN, OFFSET"
        points: [0.0]
        tolerance: [0.1, 0.1]

    "Pilotage CALYS en courant Pwr externe":  # Le CALYS ne sait pas coupper la source pour ce cas
        active: True
        calibrate: False
        calibration_points: [0.0, 20.0]
        english_name: "Measure external power"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        aoip: ":sour:func curr"   
        #aoip_out: 'Sour:current {}mA'      # More priority than general command
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        #set_val: ['Set',CALYS','*CLS; Sour:current {v} mA;:SYST:ERR?','No Error']  # Device where the reference is set, message to set, expected answer
        #get_val: ['Get','CALYS',':MEAS1?', '',3]          # Device where measure is get, message to get,  expected answer, wait time
        dialog: [
            ['Set',CALYS','*CLS; Sour:current {v} mA;:SYST:ERR?','No Error'],
            ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS; :SENS:STAT:AVER?;:SYST:ERR?', 'No Error',8] 
        ]
        correction: ":INput:CURrent:ADJ_ADC_"
        z_factor: 1.0    # 
        calibration_points: [0.0, 22.0]
        points: [0.1, 0.2, 0.3, 0.4, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 2.0, 2.5, 3.0, 4.0]
        tolerance: [0.1, 0.001]  # 0.05% +/-1µA
        full_scale: 20.0

    "Resistance 450 @ 100uA":
        active: True
        calibrate: True
        calibration_points: [0.0, 450.0]
        english_name: "Resistor @100uA"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        read_multiplicator: 10.0   # 2000: V/0.5mA  , 10: mV/0.1mA, 5000:  V/0.2mA
        aoip: ":sour:func curr;:sour:CURR:range 0mA;:sour:curr:supply ON;:sour 0.1"  #Current out for Calys output
        aoip2: ":SENS:FUNC VOLT;:SENS:VOLT:RANGE 100mV"  # Read voltage for input
        #☺aoip_out: 'Sour:current 0.1'      # More priority than general command
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        dialog: [
            ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error'],
            ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS; :SENS:STAT:AVER?;:SYST:ERR?', 'No Error',8] 
        ]
        #set_val: ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error']  # Device where the reference is set, message to set, expected answer
        #send_op: ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error']
        #get_val: ['Get','CALYS','SENS:STAT:AVR?', '',8]          # Device where measure is get, message to get,  expected answer, wait time
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0  #-486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        points: [0.0, 1.0, 15.0, 100.0, 240.0, 400.0, 450.0]
        tolerance: [0.03, 5.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0

    "Resistance 450 @ 250uA":
        active: True
        calibrate: True
        calibration_points: [15.0, 400.0]
        english_name: "Resistor @250uA"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        read_multiplicator: 4000.0   # 2000: V/0.5mA  , 10: mV/0.1mA, 5000:  V/0.2mA
        aoip: ":sour:func curr;:sour:CURR:range 0mA;:sour:curr:supply ON;:sour 0.25"  #Current out for Calys output
        aoip2: ":SENS:FUNC VOLT;:SENS:VOLT:RANGE 1V"  # Read voltage for input
        #☺aoip_out: 'Sour:current 0.1'      # More priority than general command
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        dialog: [
            ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error'],
            ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS; :SENS:STAT:AVER?;:SYST:ERR?', 'No Error',8] 
        ]
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0  #-486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        points: [0.0, 1.0,  15.0, 100.0, 240.0, 400.0, 450.0]
        tolerance: [0.03, 5.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0


    "Resistance 450 @ 400uA":
        active: True
        calibrate: True
        calibration_points: [0.0, 450.0]
        english_name: "Resistor @400uA"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        read_multiplicator: 2500.0   # 2000: V/0.5mA  , 10: mV/0.1mA, 5000:  V/0.2mA
        aoip: ":sour:func curr;:sour:CURR:range 0mA;:sour:curr:supply ON;:sour 0.4"  #Current out for Calys output
        aoip2: ":SENS:FUNC VOLT;:SENS:VOLT:RANGE 1V"  # Read voltage for input
        #☺aoip_out: 'Sour:current 0.1'      # More priority than general command
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        dialog: [
            ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error'],
            ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS; :SENS:STAT:AVER?;:SYST:ERR?', 'No Error',8] 
        ]
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0  #-486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        points: [0.0, 1.0, 15.0, 100.0, 240.0, 400.0, 450.0]
        tolerance: [0.03, 5.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0

    "Resistance 450 @ 2mA":
        active: True
        calibrate: True
        calibration_points: [0.0, 450.0]
        english_name: "Resistor @2mA"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        read_multiplicator: 500.0   # 2000: V/0.5mA  , 10: mV/0.1mA, 5000:  V/0.2mA
        aoip: ":sour:func curr;:sour:CURR:range 0mA;:sour:curr:supply ON;:sour 2;"  #Current out for Calys output
        aoip2: ":SENS:FUNC VOLT;:SENS:VOLT:RANGE 1V"  # Read voltage for input
        #☺aoip_out: 'Sour:current 0.1'      # More priority than general command
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        dialog: [
            ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error'],
            ['Send','CALYS','*CLS;:SENS:STAT:INIT;:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS; :SENS:STAT:AVER?;:SYST:ERR?', 'No Error',8] 
        ]
        #set_val: ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error']  # Device where the reference is set, message to set, expected answer
        #get_val: ['Get','CALYS',':MEAS?', '',4]          # Device where measure is get, message to get,  expected answer, wait time
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0  #-486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
#        points: [0.0, 0.1, 1.0, 80.0, 100.0, 160.0, 240.0, 320.0, 450.0]
        points: [0.0, 1.0, 15.0, 100.0, 240.0, 400.0, 450.0]
        tolerance: [0.03, 5.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0

    "Sortie resistance PJ (+) 0.. 450R":
        active: True
        calibrate: True
        english_name: "Resistor simulator PJ (+) 0..450R"
        relays: [0x01, 0x08, 0x20]     # V+:B, V-:C Rhom+
        aoip: "RANGE_IN OHM600:WIRE4"
        #aoip2: ":SENSE:FUNC RES;RES:WIR WIRES_4"
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        dialog: [
            ['Set',GIV4','*CLS; :OUT:VAL {v};:SYST:ERR?','No Error'],
            ['Get','CALYS','*CLS;MEAS?', '',6] 
        ]
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        z_g_overwrite: True     # For this range, force default values g=1 and z=0 before correction calculation
        calibration_points: [60.0, 200.0]
        points: [0.0, 1.0, 15.0, 60.0, 100.0, 200.0, 360.0, 450.0]
#        points: [0.0, 0.1, 1.0, 80.0, 100.0, 160.0, 240.0, 320.0, 450.0]
        tolerance: [0.05, 0.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0


    "Sortie resistance (+) 0.. 450R":
        active: True
        calibrate: True
        english_name: "Resistor simulator (+) 0..450R"
        relays: [0x01, 0x08, 0x20]     # V+:B, V-:C Rhom+
        aoip: "SENSE:FUNC RES;RES:RANGE 400OHM"
        aoip2: ":SENSE:FUNC RES;RES:WIR WIRES_4"
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        measure_on: aoip 
        aoip_meas_time: 4.0 # Resistor is more slow
        correction: ":OUTput:RES:0400:POS:ADJ_DAC_"
        z_factor: -486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        z_g_overwrite: True     # For this range, force default values g=1 and z=0 before correction calculation
        calibration_points: [0.0, 400.0]
        points: [0.0, 1.0, 15.0, 100.0, 240.0, 400.0, 450.0]
#        points: [0.0, 0.1, 1.0, 80.0, 100.0, 160.0, 240.0, 320.0, 450.0]
        tolerance: [0.05, 0.03]  # Il faut aussi passer 0.05%
        full_scale: 450.0

    "Sortie resistance (-) 0.. 450R":
        active: True
        calibrate: True
        english_name: "Resistor simulator (-) 0..450R"
        relays: [0x02, 0x04, 0x40]     # V+:C, V-:B Rhom-
        aoip: ":SENSE2:FUNC RES;RES:RANGE 400OHM"
        aoip2: ":SENSE2:FUNC RES;RES:WIR WIRES_4"
        giv4: ":MODE OUTPUT_RESISTOR_0400OHMS"
        measure_on: aoip 
        aoip_meas_time: 4.0 # Resistor is more slow
        correction: ":OUTput:RES:0400:NEG:ADJ_DAC_"
        z_factor: -486.0    # For resistance, 1.0 offset is compensed with 1/ (496.0 - 10)
        z_g_overwrite: True     # For this range, force default values g=1 and z=0 before correction calculation
        calibration_points: [0.0, 400.0]
        points: [0.0, 0.1, 1.0, 80.0, 100.0, 160.0, 240.0, 320.0, 450.0]
        tolerance: [0.01, 0.03]  #  0.05% +/- 0.03R
        full_scale: 450.0

    "Sortie resistance (+) 0.. 4500R":
        active: True
        calibrate: True
        english_name: "Resistor simulator (+) 0..4500R"
        relays: [0x01, 0x08, 0x20]     # V+:B, V-:C Rhom+
        aoip: ":SENSE2:FUNC RES;RES:RANGE 3600OHM"
        aoip2: ":SENSE2:FUNC RES;RES:WIR WIRES_4"
        giv4: ":MODE OUTPUT_RESISTOR_04KOHMS"
        measure_on: aoip 
        aoip_meas_time: 4.0 # Resistor is more slow
        correction: ":OUTput:RES:04K:POS:ADJ_DAC_"
        z_factor: -4906.0    # For resistance, 1.0 offset is compensed with 1/(4916-10)
        z_g_overwrite: True     # For this range, force default values g=1 and z=0 before correction calculation
        calibration_points: [600.0, 2000.0]  #[0.0, 2500.0] [0.0, 3600] => 600R= -100, 2000R= 260°C
        points: [0.0, 1.0, 10.0, 600.0, 1000.0, 1600.0, 2400.0, 3200.0, 3600.0]
        tolerance: [0.025, 0.03]  # Il faut aussi passer 0.05%
        full_scale: 4500.0

    "Sortie resistance (-) 0.. 4500R":
        active: True
        calibrate: True
        english_name: "Resistor simulator (-) 0..4500R"
        relays: [0x02, 0x04, 0x40]     # V+:C, V-:B Rhom-
        aoip: ":SENSE2:FUNC RES;RES:RANGE 3600OHM"
        aoip2: ":SENSE2:FUNC RES;RES:WIR WIRES_4"
        giv4: ":MODE OUTPUT_RESISTOR_04KOHMS"
        measure_on: aoip 
        aoip_meas_time: 4.0 # Resistor is more slow
        correction: ":OUTput:RES:04K:NEG:ADJ_DAC_"
        z_factor: -4906.0    # For resistance, 1.0 offset is compensed with 1/(4916-10)
        z_g_overwrite: True     # For this range, force default values g=1 and z=0 before correction calculation
        calibration_points: [0.0, 2500.0]
        points: [0.0, 1.0, 10.0, 800.0, 1000.0, 1600.0, 2400.0, 3200.0, 3600.0]
        tolerance: [0.025, 0.03]  #  0.05% +/- 0.03R
        full_scale: 4500.0



    "Mesure de courrant 0-20 mA Pwr externe":  # Le CALYS ne sait pas coupper la source pour ce cas
        active: True
        calibrate: True
        calibration_points: [0.0, 20.0]
        english_name: "Measure 0-20mA external power"
        relays: [0x03,0x04,0x10] #  V+:D  V-:B  Pwr
        aoip: ":sour:func curr"   
        aoip_out: 'Sour:current {}mA'      # More priority than general command
        giv4: ":MODE INPUT_CURRENT_020MA"
        measure_on: giv 
        correction: ":INput:CURrent:ADJ_ADC_"
        z_factor: 1.0    # 
        calibration_points: [0.0, 22.0]
        points: [0.0, 2.0, 4.0, 8.0, 10.0, 12.0, 16.0, 18.0, 20.0]
        tolerance: [0.01,0.001]  # 0.05% +/-1µA
        full_scale: 20.0

    "Mesure de courrant 0-20 mA Pwr interne":  # Le CALYS ne sait pas coupper la source pour ce cas
        active: False   # Pas possible, on ne fait pas
        relays: [0x00,0x0C,0x10] # V+:A,  V-:B, Pwr 
        english_name: "Measure 0-20mA Internal power"
        aoip: ":sour:func curr"   
        aoip_out: 'Sour:current {}mA'      # More priority than general command
        giv4: ":MODE INPUT_CURRENT_020MA"
        measure_on: giv 
        correction: "GIV4 GAIN, OFFSET"
        points: [4.0, 8.0, 10.0, 12.0, 16.0, 18.0, 20.0]
        tolerance: [0.01,0.001]  # 0.05% +/-1µA
        full_scale: 20.0


    "Sortie courant 4-20 mA":
        active: True
        calibrate: False  
        english_name: "Output current 4-20mA with internal power"
        relays: [0x04]     # V+:A, V-:B
        aoip: "SENSE2:FUNC CURRENT;CURRENT:RANGE 25MA;SUPPLY OFF"
        giv4: ":MODE OUTPUT_CURRENT_420MA"
        measure_on: aoip 
        points: [4.0, 8.0, 10.0, 12.0, 16.0, 18.0, 20.0]
        tolerance: [0.01, 0.001]  # 0.05% +/-0.0
        full_scale: 20.0

    "Sortie Pt1000 (+)":
        active: True
        calibrate: False
        english_name: "Output Pt1000 (+)"
        relays: [0x01, 0x08, 0x20]     # V+:B, V-:C Rhom+
        aoip: "*CLS;SENSE2:FUNC RTD;RTD:TYPE PT1000;:SYST:ERR?"
        aoip2: "*CLS;SENSE2:FUNC RTD;RTD:WIRES WIRES_4;:SYST:ERR?"
        # giv4: ":MODE OUTPUT_TCT;:OUTPUT:SENSOR:TC:COMP:TYPE INT; TYPE?;:IN:VAL?" # Affiche en retour la valeur de compensation mesurée
        giv4: "*CLS;:MODE OUTPUT_RTD_PT1000;:SYST:ERR?" # Affiche en retour la valeur de compensation mesurée
        aoip_meas_time: 4.0 # Resistor is more slow
        measure_on: aoip 
        correction: "None"  # Pas d'ajustage G/Z: Ce sont ceux des resistance
        calibration_points: [0, 0]
        points: [-200.0, -100.0, 0.0, +100.0, +200.0, 400.0]
        tolerance: [0.0, 0.3]  # Sur cette game on cherche juste +/- 0.15 °C
        full_scale: 1050.0


    "Sortie Pt1000 (-)":
        active: True
        calibrate: False
        english_name: "Output Pt1000 (-)"
        relays: [0x02, 0x04, 0x40]     # V+:C, V-:B Rhom-
        aoip: "*CLS;SENSE2:FUNC RTD;RTD:TYPE PT1000;:SYST:ERR?"
        aoip2: "*CLS;SENSE2:FUNC RTD;RTD:WIRES WIRES_4;:SYST:ERR?"
        # giv4: ":MODE OUTPUT_TCT;:OUTPUT:SENSOR:TC:COMP:TYPE INT; TYPE?;:IN:VAL?" # Affiche en retour la valeur de compensation mesurée
        giv4: "*CLS;:MODE OUTPUT_RTD_PT1000;:SYST:ERR?" # Affiche en retour la valeur de compensation mesurée
        aoip_meas_time: 4.0 # Resistor is more slow
        measure_on: aoip 
        correction: "None"  # Pas d'ajustage G/Z: Ce sont ceux des resistance
        calibration_points: [0, 0]
        points: [-200.0, -100.0, 0.0, +100.0, +200.0, 400.0]
        tolerance: [0.0, 0.3]  # Sur cette game on cherche juste +/- 0.15 °C
        full_scale: 1050.0


    "Sortie Pt100 (+)":
        active: True
        calibrate: False
        english_name: "Output Pt100 (+)"
        relays: [0x01, 0x08, 0x20]     # V+:B, V-:C Rhom+
        aoip: "*CLS;SENSE2:FUNC RTD;RTD:TYPE PT100;:SYST:ERR?"
        aoip2: "*CLS;SENSE2:FUNC RTD;RTD:WIRES WIRES_4;:SYST:ERR?"
        # giv4: ":MODE OUTPUT_TCT;:OUTPUT:SENSOR:TC:COMP:TYPE INT; TYPE?;:IN:VAL?" # Affiche en retour la valeur de compensation mesurée
        giv4: "*CLS;:MODE OUTPUT_RTD_PT100;:SYST:ERR?" # Affiche en retour la valeur de compensation mesurée
        aoip_meas_time: 4.0 # Resistor is more slow
        measure_on: aoip 
        correction: "None"  # Pas d'ajustage G/Z: Ce sont ceux des resistance
        calibration_points: [0, 0]
        points: [-200.0, -100.0, 0.0, +100.0, +200.0, 400.0]
        tolerance: [0.00, 0.15]  # 0.05% +/-2°C  On tolere une différece de +/-2° entre les capteurs Calysse et GIV
        full_scale: 1050.0


    "Sortie Pt100 (-)":
        active: True
        calibrate: False
        english_name: "Output Pt100 (-)"
        relays: [0x02, 0x04, 0x40]     # V+:C, V-:B Rhom-
        aoip: "*CLS;SENSE2:FUNC RTD;RTD:TYPE PT100;:SYST:ERR?"
        aoip2: "*CLS;SENSE2:FUNC RTD;RTD:WIRES WIRES_4;:SYST:ERR?"
        # giv4: ":MODE OUTPUT_TCT;:OUTPUT:SENSOR:TC:COMP:TYPE INT; TYPE?;:IN:VAL?" # Affiche en retour la valeur de compensation mesurée
        giv4: "*CLS;:MODE OUTPUT_RTD_PT100;:SYST:ERR?" # Affiche en retour la valeur de compensation mesurée
        aoip_meas_time: 4.0 # Resistor is more slow
        measure_on: aoip 
        correction: "None"  # Pas d'ajustage G/Z: Ce sont ceux des resistance
        calibration_points: [0, 0]
        points: [-200.0, -100.0, 0.0, +100.0, +200.0, 400.0]
        tolerance: [0.0, 0.15]  # 0.05% +/-2°C  On tolere une différece de +/-2° entre les capteurs Calysse et GIV
        full_scale: 1050.0
